@page "/manage/questions/add"

@using RDT_WEB_LL.Models.Form_Models 
@inject IJSRuntime JS

<h3>Add New Question</h3>

<div class="card">
    <div class="card-body">
        <EditForm Model=@model>
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Question text</label>
                <InputText class="form-control" @bind-Value=@model.QuestionText placeholder="Enter question" />
                <ValidationMessage For="() => model.QuestionText" />
            </div>
            <div class="form-group">
                <label>Question Type</label>
                <InputSelect @bind-Value=@model.QuestionType class="form-control">
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="4">4</option>
                    <option value="5">5</option>
                </InputSelect>
            </div>

            <div id="possible-answer-input-container">
                <label>Possible Answer</label>
                <div class="form-group">
                    @for (var i = 0; i < possibleAnswerInputcount; i++)
                    {
                        var j = i;
                        addNewPossibleAnswerToModel();
                        <InputText @bind-Value=@model.PossibleAnswers[j].Value class="form-control mb-2" placeholder="Enter possible answer" />
                    }
                </div>
            </div>

            <div class="d-flex justify-content-end">
                <button class="btn btn-outline-primary" @onclick="OnAddMorePossibleAnswer" @onclick:preventDefault="true">Add more</button>
            </div>

            <button type="submit" class="btn btn-primary">Add question</button>
        </EditForm>
    </div>
</div>

@code {
    public int possibleAnswerInputcount = 1;
    AddQuestionFormModel model = new AddQuestionFormModel();

    private void OnAddMorePossibleAnswer()
    {
        possibleAnswerInputcount++;
    }

    private void addNewPossibleAnswerToModel()
    {
        model.PossibleAnswers.Add(new PossibleAnswerFormModel { Value = " " });
    }
}
