@using RDT_WEB_LL.Models

@for (var i = 0; i < answers.Count(); i++)
{
    var j = i;
    char choiceChar = (char)(j + 65);
    <div class="form-check">
        <input class="form-check-input" type="radio" name=@inputName @onchange="@(e => OnOptionSelected(e, j))" value=@answers[j].Answer>
        <label class="form-check-label" for="exampleRadios1">
            @ShowChoiceAlphabet(j) @answers[j].Answer
        </label>
    </div>
}

@code {
    [Parameter]
    public List<PossibleAnswer> answers { get; set; }

    [Parameter]
    public int questionTypeId { get; set; }

    [Parameter]
    public UserAnswer userAnswer { get; set; }

    [Parameter]
    public EventCallback<UserAnswer> userAnswerChanged { get; set; }

    private string inputName { get; set; } = "";

    private char ShowChoiceAlphabet(int idx)
    {
        return questionTypeId == (int)QuestionTypeEnum.MultipleChoice ? (char)(idx + 65) : ' ';
    }

    protected override void OnInitialized()
    {
        if (userAnswer != null)
        {
            inputName = answers[0].QuestionId.ToString();
            userAnswer.Answer = answers[0].Answer;
        }

    }

    private void OnOptionSelected(ChangeEventArgs args, int answerIdx)
    {
        if (userAnswer == null) return;
        userAnswer.Answer = args.Value.ToString();
        userAnswer.IsCorrect = answers[answerIdx].IsCorrect;

        userAnswerChanged.InvokeAsync(userAnswer);
    }
}
