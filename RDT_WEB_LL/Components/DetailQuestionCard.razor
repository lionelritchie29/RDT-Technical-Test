@using RDT_WEB_LL.Models
@using RDT_WEB_LL.Components
@using RDT_WEB_LL.Services

@inject IJSRuntime JS
@inject IQuestionServices questionService
@inject NavigationManager NavigationManager

<div class="card position-sticky primary-bg-dark" style="top: 0;">
    <div class="card-header bg-primary text-white">
        Question preview
    </div>

    @if (question == null)
    {
        <div class="p-5 text-center">
            <p>No question to be previewed</p>
        </div>
    }
    else
    {
        <div class="card-body">
            <p class="card-text">@question.QuestionText</p>
        </div>

        <QuestionCardAnswer question=@question userAnswer=null></QuestionCardAnswer>
        <div class="card-body">
            <button class="btn btn-primary text-white" @onclick=@OnUpdate>Update</button>
            <button @onclick=@OnDelete class="btn btn-danger text-white">Delete</button>
        </div>
    }
</div>

@code {
    [Parameter]
    public Question question { get; set; }

    [Parameter]
    public EventCallback<Question> OnDeleteCallback { get; set; }

    private async void OnDelete()
    {
        bool confirmed = await JS.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirmed)
        {
            await OnDeleteCallback.InvokeAsync(question);
            questionService.Delete(question);
            await JS.InvokeVoidAsync("alert", "Delete success");
        }
    }

    private async void OnUpdate()
    {
        await JS.InvokeVoidAsync("alert", "Feature on progress");
    }
}
